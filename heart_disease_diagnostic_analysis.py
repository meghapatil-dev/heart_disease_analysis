# -*- coding: utf-8 -*-
"""Heart-Disease -Diagnostic-Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X6OsyCfJ_dVxnRmqT23QAKuN74wi8EE1

#                             Heart Disease Diagnostic Analysis
"""

#Importing Libraries

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

#Extracting CSV Dataset From System using Pandas Library

data=pd.read_excel('Heart Disease data.xlsx')
data.head()

#All Columns in the Dataset

data.columns

"""##### There are thirteen features in Dataset

age: The person's age in years

sex: The person's sex (1 = male, 0 = female)

cp: The chest pain experienced (Value 1: typical angina, Value 2: atypical angina, Value 3: non-anginal pain, Value 4: asymptomatic)

trestbps: The person's resting blood pressure (mm Hg on admission to the hospital)

chol: The person's cholesterol measurement in mg/dl

fbs: The person's fasting blood sugar (> 120 mg/dl, 1 = true; 0 = false)

restecg: Resting electrocardiographic measurement (0 = normal, 1 = having ST-T wave abnormality, 2 = showing probable or definite left ventricular hypertrophy by Estes' criteria)

thalach: The person's maximum heart rate achieved

exang: Exercise induced angina (1 = yes; 0 = no)

oldpeak: ST depression induced by exercise relative to rest

slope: the slope of the peak exercise ST segment (Value 1: upsloping, Value 2: flat, Value 3: downsloping)

ca: The number of major vessels (0-3)

thal: A blood disorder called thalassemia (3 = normal; 6 = fixed defect; 7 = reversable defect)
"""

#Applying converted data into our dataset with new column - Heart_Disease
data_1 =data.rename(columns = {'target':'heart_disease'}, inplace = False)
data_1.columns

#Checking NULL Values

data.isnull().sum()

"""###### There is NO MISSING Values in our Dataset"""

data.info()

"""From above we conclude that thalach,exang, olpeak,ca, age and sex has highest correlation with target or they are responsible for people suffering from heart disease or not.

"""

data.describe()

# Converting  Categorical Data into Numerical Data

from sklearn import preprocessing

# create the LabelEncoder object
label_encoder = preprocessing.LabelEncoder()

data['target'] = label_encoder.fit_transform(data['target'])
data['sex'] = label_encoder.fit_transform(data['sex'])
data['fbs'] = label_encoder.fit_transform(data['fbs'])
data['exang'] = label_encoder.fit_transform(data['exang'])
data.head()

data.corr()

"""**Minimum Age = 29**

**Maximum Age = 77**

**Mean Age = 54.43414634146342**
"""

data_1['heart_disease'].value_counts()

plt.figure(figsize=(10,9))
sns.heatmap(data.corr(), annot=True, linewidth=3, cmap='PuOr')
plt.show();

"""## Percentage of people having Heart Disease"""

#Pie Chart Creation of Heart Disease Population % using MatplotLib
sizes = data_1['heart_disease'].value_counts().tolist()

# Define your custom colors
colors = ['purple', 'orange']

plt.figure(figsize=(6,4))
plt.pie(sizes, labels=['present','absent'],colors=colors, autopct='%1.1f%%')
plt.title('Heart Disease Population %', fontsize=15)
plt.show()

"""**From the overall population, people having heart disease (46%) are lesser than those who have heart disease(56%)**"""

#Countplot Creation of Population Age using MatplotLib and Seaborn
custom_palette = {'Female': "yellow", 'Male': "purple"}
plt.figure(figsize=(15,7))
sns.countplot(x='age', data=data_1, hue='sex', palette=custom_palette)
plt.title('Population Age', fontsize=17)
plt.xlabel('Age', fontsize=15)
plt.ylabel('Count', fontsize=15)
plt.show()

"""**In this section, the most effective analysis can be broken down into three categories: seniors, middle-aged individuals, and young people, based on their age groups. Additionally, the male population has a higher proportion of individuals compared to the female population.**"""

#Categorical Analysis

Young_Ages=data_1[(data_1['age']>=29) & (data_1['age']<40)]
Middle_Ages=data_1[(data_1['age']>=40) & (data_1['age']<55)]
Elderly_Ages=data_1[(data_1['age']>54)]
print('Young Ages =',len(Young_Ages))
print('Middle Ages =',len(Middle_Ages))
print('Elderly Ages =',len(Elderly_Ages))

# Assuming 'Young_Ages', 'Middle_Ages', 'Elderly_Ages' are your data
data_2 = [len(Young_Ages), len(Middle_Ages), len(Elderly_Ages)]
labels = ['Young_Ages','Middle_Ages','Elderly_Ages']
palette = {'Young_Ages':'yellow','Middle_Ages':'purple','Elderly_Ages':'orange'}
plt.pie(data_2, labels=labels, autopct='%1.1f%%', colors=[palette[label] for label in labels])
plt.title('Age Category', fontsize=17)
plt.show()

#Converting Numerical Data into Categorical Data

def age_range(row):
    if row>=29 and row<40:
        return 'Young Age'
    elif row>=40 and row<55:
        return 'Middle Age'
    else:
        return 'Elder Age'

#Applying converted data into our dataset with new column - Age_Range
data_1['age_range'] = data_1['age'].apply(age_range)
data_1.head()

#strip Plot Creation of Gender Based Age Category using MatplotLib and Seaborn

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(6,4))
color_dict = {'Male':'purple','Female':'yellow'}
sns.stripplot(x='age_range', y='age', hue='sex', data=data_1, palette=color_dict)
plt.title('Gender Based Age Category', fontsize=17)
plt.xlabel('Age Category', fontsize=15)
plt.ylabel('Age', fontsize=15)
plt.show()

"""In Population Number Of males are more in Middle Age Category and in Elder Age Category"""

#Count Plot Creation of Heart Disease Based On Age Category using MatplotLib and Seaborn

plt.figure(figsize=(7,5))
hue_order=['Young Age', 'Middle Age', 'Elder Age']
color_dict = {'Young Age': 'yellow', 'Middle Age': 'purple', 'Elder Age': 'orange'}
sns.countplot(x='heart_disease', hue='age_range', data=data_1, order=['Present', 'Absent'],hue_order=hue_order, palette=color_dict)
plt.title('Heart Disease Based On Age Category', fontsize=17)
plt.xlabel('Heart Disease', fontsize=14)
plt.ylabel('Counts', fontsize=14)
plt.show()

""" Middle Age People are most affected by Heart Disease AND Elder Age People are mostly FREE from any kind of Heart Disease"""

#Count Plot Creation of Heart Disease Based on Gender using MatplotLib and Seaborn

plt.figure(figsize=(5,4))
color_dict = {'Male':'orange','Female': 'purple'}
sns.countplot(x=data_1['heart_disease'], hue='sex', data=data_1, palette=color_dict)
plt.xlabel('Heart Disease', fontsize=15)
plt.ylabel('Count',fontsize=15)
plt.legend(labels=['Male','Female'])
plt.title('Heart Disease Based on Gender',fontsize=14)
plt.show()

"""We can see that Males are more prone to Heart Disease"""

#Count Plot Creation of Chest Pain Experienced using MatplotLib and Seaborn

plt.figure(figsize=(6,4))
palette_1 = {'typical angina':'purple','atypical angina':'yellow','non-anginal pain':'orange','asymptomatic':'green'}
sns.countplot(x=data_1['heart_disease'], hue='cp', data=data_1, order=['Present','Absent'], palette = palette_1)
plt.title('Chest Pain Experienced', fontsize=17)
plt.xlabel('Heart Disease',fontsize=15)
plt.ylabel('Counts',fontsize=15)
plt.legend(labels=['Typical Angina','Atypical Angina','Non-Anginal pain','Asymptomatic'])
plt.show()

"""**"Non-Anginal pain” implies higher chance of heart disease.**

**"Typical Angina” implies the absence of heart disease symptoms.**
"""

#Count Plot Creation of Chest Pain Based On Gender using MatplotLib and Seaborn

plt.figure(figsize=(6,4))
sns.countplot(x=data_1['sex'], hue='cp', data=data, palette = palette_1)
plt.title('Chest Pain Based On Gender', fontsize=14)
plt.xlabel('Sex', fontsize=12)
plt.ylabel('Counts', fontsize=12)
plt.legend(labels=['Typical Angina','Atypical Angina','Non-Anginal pain','Asymptomatic'])
plt.show()

"""**We can see that a higher number of men has non Angina pain and atypical angina that implies heart disease**"""

#Count Plot Creation of Chest Pain Based On Age Category using MatplotLib and Seaborn

sns.countplot(x=data_1['age_range'], hue='cp', data=data_1, order=['Young Age', 'Middle Age', 'Elder Age'], palette=palette_1)
plt.title('Chest Pain Based On Age Category', fontsize=17)
plt.xlabel('Age Category', fontsize=15)
plt.ylabel('Counts', fontsize=15)
plt.legend(labels=['Typical Angina','Atypical Angina','Non-Anginal pain','Asymptomatic'])
plt.show()

"""**There is high number of typical angina in elder age Category which implies they are free from heart disease**

**We can see that a higher number of middle age has non angina pain that implies heart disease**
"""

#Bar Plot Creation of Person's Resting Blood Pressure (mm Hg) using MatplotLib and Seaborn

plt.figure(figsize=(6,4))
sns.barplot(x='sex', y='trestbps', hue='sex',data=data_1,palette=color_dict, legend=False)
plt.title("Blood Pressure", fontsize=10)
plt.xlabel('Sex',fontsize=10)
plt.ylabel("Person's Resting Blood Pressure (mm Hg)", fontsize=10);

"""**Blood Pressure Rate is almost equal in Males and Females**"""

#Bar Plot Creation of Cholestrol Level Based On Gender using MatplotLib and Seaborn
plt.figure(figsize=(5,4))
sns.barplot(x='sex', y='chol', hue='sex',data=data_1,palette=color_dict, legend=False)
plt.title("Cholestrol Level Based On Gender", fontsize=10)
plt.xlabel('Sex',fontsize=10)
plt.ylabel("Cholestrol", fontsize=10)
plt.show()

"""**Cholesterol levels are slightly higher in females compared to males.**"""

#Bar Plot Creation of Cholestrol VS Heart Disease using MatplotLib and Seaborn
plt.figure(figsize=(5,4))
color_dict_1 = {'Present':'purple','Absent':'orange'}
sns.barplot(x='heart_disease', y='chol', hue='heart_disease', data=data_1, palette=color_dict_1, legend=False)
plt.title('Cholestrol VS Heart Disease', fontsize=10)
plt.xlabel('Heart Disease', fontsize=10)
plt.ylabel('Cholestrol', fontsize=10)
plt.show()

"""**Higher Cholestrol Level does not result Chances Of Heart Disease**"""

#Bar Plot Creation of Blood Pressure VS Heart Disease using MatplotLib and Seaborn
plt.figure(figsize=(5,4))
sns.barplot(x='heart_disease', y='trestbps', hue='heart_disease', data=data_1, palette=color_dict_1, legend=False)
plt.title('Blood Pressure VS Heart Disease', fontsize=10)
plt.xlabel('Heart Disease', fontsize=10)
plt.ylabel('Blood Pressure', fontsize=10)
plt.show()

"""**Higher Blood Pressure Level does not results Chances Of Heart Disease**"""

#Line Plot Creation of Blood Pressure VS Age using MatplotLib and Seaborn
plt.figure(figsize=(5,4))
sns.lineplot(x='age', y='trestbps', data=data_1, color='purple')
plt.title('Blood Pressure VS Age', fontsize=10)
plt.xlabel('Age', fontsize=10)
plt.ylabel('Blood Pressure', fontsize=10)
plt.show()

"""**We can notice that blood pressure tends to rise from the age of 50 to 60 and this trend appears to persist until the age of 70.**"""

#Line Plot Creation of Cholestrol VS Age using MatplotLib and Seaborn
plt.figure(figsize=(5,4))
sns.lineplot(x='age', y='chol', data=data_1, color='orange')
plt.title('Cholestrol VS Age', fontsize=10)
plt.xlabel('Age', fontsize=10)
plt.ylabel('Cholestrol', fontsize=10)
plt.show()

"""**Similarly Cholestrol Increasing in the age group of 50-70**"""

#Line Plot Creation of ST Depression VS Age using MatplotLib and Seaborn
plt.figure(figsize=(5,4))
sns.lineplot(x='age', y='oldpeak', data=data_1, color='purple')
plt.title('ST Depression VS Age', fontsize=10)
plt.xlabel('Age', fontsize=10)
plt.ylabel('ST depression', fontsize=10)
plt.show()

"""**It can be noted that ST depression predominantly escalates among individuals aged between 30 and 40.**

**ST depression refers to a finding on an electrocardiogram, wherein the trace in the ST segment is abnormally low below the baseline.**
"""

#Bar Plot Creation of ST depression VS Heart Disease using MatplotLib and Seaborn
plt.figure(figsize=(5,4))
sns.barplot(x='sex', y='oldpeak', hue='sex', data=data_1, palette=color_dict, legend=False)
plt.title('ST depression VS Heart Disease', fontsize=10)
plt.xlabel('Sex', fontsize=10)
plt.ylabel('ST depression', fontsize=10)
plt.show()

"""**More Males are prone to ST depression as compare to females**"""

#Bar Plot Creation of Exercise With Angina VS Heart Disease using MatplotLib and Seaborn

plt.figure(figsize=(5,4))
col_dict={'Yes':'orange','No':'purple'}
sns.barplot(x='heart_disease',y='oldpeak',hue='exang', data=data_1, palette=col_dict, legend=False)
plt.title('Exercise With Angina VS Heart Disease', fontsize=10)
plt.xlabel('Heart Disease', fontsize=10)
plt.ylabel('Exercise With Angina', fontsize=10)
plt.legend(labels=['Yes','No'])
plt.show()

"""**If you suffer from Angina, you may be concerned that exercise will make your symptoms cure**

"""

#Bar Plot Creation of Exercise With Angina VS Gender using MatplotLib and Seaborn

plt.figure(figsize=(5,4))
col_dict={'Yes':'orange','No':'purple'}
sns.barplot(x='sex',y='oldpeak',hue='exang', data=data_1, palette=col_dict)
plt.title('Exercise With Angina VS Gender', fontsize=10)
plt.xlabel('Sex', fontsize=10)
plt.ylabel('Exercise With Angina', fontsize=10)
plt.legend(labels=['Yes','No'])
plt.show()

"""**Males have have high Exercise Angina**"""

#Bar Plot Creation of Fasting Blood Sugar VS Gender using MatplotLib and Seaborn
plt.figure(figsize=(5,4))
sns.barplot(y='fbs', x='sex',data=data_1, hue='sex', palette=color_dict, legend=False)
plt.title(' Fasting Blood Sugar VS Gender', fontsize=10)
plt.xlabel('Sex', fontsize=10)
plt.ylabel('Fasting Blood Sugar', fontsize=10)
plt.show()

"""**Males have high no of Fasting Blood Sugar over 120**"""